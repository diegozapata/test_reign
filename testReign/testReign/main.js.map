{"version":3,"sources":["./src/app/services/news.service.ts","./src/environments/environment.ts","./src/app/shared/filtert-news/filtert-news.component.ts","./src/app/shared/filtert-news/filtert-news.component.html","./src/app/components/app-news/app-news.component.html","./src/app/components/app-news/app-news.component.ts","./src/app/shared/list-news/list-news.component.html","./src/app/shared/list-news/list-news.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/utils/logger-factory.service.ts","./src/app/shared/switch-publications/switch-publications.component.ts","./src/app/shared/switch-publications/switch-publications.component.html","./src/app/services/persistence.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NewsService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getNews(language: string, page: number): Observable<any> {\r\n    const url = `${environment.RESTservices.news.baseUrl}${environment.RESTservices.news.search}?query=${language}&page=${page}`;\r\n    return this.http.get(url).pipe(finalize(() => {}));\r\n  }\r\n}\r\n","export const environment = {\n  production: false,\n  log: {\n    active: 'true',\n    level: 'TRACE',\n  },\n  RESTservices: {\n    news: {\n      baseUrl: ' https://hn.algolia.com/api/v1/',\n      search: 'search_by_date',\n    },\n  },\n};\n","import { zip } from 'rxjs';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { PersistenceUtilService } from 'src/app/services/persistence.service';\n@Component({\n  selector: 'app-filtert-news',\n  templateUrl: './filtert-news.component.html',\n  styleUrls: ['./filtert-news.component.css'],\n})\nexport class FiltertNewsComponent implements OnInit {\n  language = [\n    { model: 'angular', img: '../../../assets/img/image-138.png' },\n    { model: 'reactjs', img: '../../../assets/img/image-140.png' },\n    { model: 'vuejs', img: '../../../assets/img/image-141.png' },\n  ];\n  languageForm!: FormGroup;\n  selectLanguage!: string;\n  @Output() controllerFilter = new EventEmitter<{\n    selectLanguage: string;\n  }>();\n  constructor(\n    private formBuilder: FormBuilder,\n    private persistenceUtilService: PersistenceUtilService\n  ) {}\n\n  ngOnInit(): void {\n    this.initForm();\n    this.reLoad();\n  }\n\n  initForm(): void {\n    this.languageForm = this.formBuilder.group({\n      language: [null, Validators.required],\n      validacion: [{ disabled: true }],\n    });\n\n    this.languageForm.controls.validacion.disable();\n  }\n\n  onChange(event: any): void {\n    this.selectLanguage = this.languageForm.value.language;\n    this.controllerFilter.emit({\n      selectLanguage: this.selectLanguage,\n    });\n  }\n  reLoad(): void {\n    const persistence = this.persistenceUtilService.getLocal('nameFilter');\n    if (persistence) {\n      this.languageForm.controls.language.setValue(persistence);\n      this.selectLanguage = this.languageForm.value.language;\n    }\n  }\n}\n","<form [formGroup]=\"languageForm\" style=\"display: flex\">\n  <select\n    class=\"select_class\"\n    name=\"language\"\n    id=\"language\"\n    formControlName=\"language\"\n    (change)=\"onChange($event)\"\n    required\n  >\n    <option [ngValue]=\"null\" [disabled]=\"true\">Select your news</option>\n    <option *ngFor=\"let l of language\" [ngValue]=\"l.model\">\n      <img src=\"{{ l.img }}\" class=\"Image-140\" />\n\n      {{ l.model }}\n    </option>\n  </select>\n</form>\n","<app-switch-publications\n  (controllerList)=\"controllerList($event)\"\n></app-switch-publications>\n\n<app-filtert-news\n  *ngIf=\"flagFilter\"\n  (controllerFilter)=\"controllerFilter($event)\"\n></app-filtert-news>\n\n<app-list-news\n  [flagFilter]=\"flagFilter\"\n  [tabAct]=\"tabAct\"\n  [selectLanguage]=\"selectLanguage\"\n></app-list-news>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-app-news',\n  templateUrl: './app-news.component.html',\n  styleUrls: ['./app-news.component.css'],\n})\nexport class AppNewsComponent implements OnInit {\n  flagFilter = true;\n  selectLanguage!: string;\n  tabAct!: string;\n  constructor() {}\n\n  ngOnInit(): void {\n    this.tabAct = 'all';\n  }\n\n  controllerList($event: { tabAct: any }): void {\n    this.tabAct = $event.tabAct;\n    $event.tabAct === 'fav'\n      ? (this.flagFilter = false)\n      : (this.flagFilter = true);\n  }\n\n  controllerFilter($event: { selectLanguage: any }): void {\n    this.selectLanguage = $event.selectLanguage;\n  }\n}\n","<section\n  *ngFor=\"\n    let item of dataNews\n      | paginate\n        : {\n            id: 'news',\n            itemsPerPage: itemsPerPage,\n            currentPage: currentPage,\n            totalItems: totalItems\n          }\n  \"\n>\n  <p>{{ item.author }}</p>\n</section>\n<pagination-controls\n  *ngIf=\"selectLanguage\"\n  id=\"news\"\n  previousLabel=\"Prev\"\n  nextLabel=\"Next\"\n  (pageChange)=\"pageChanged($event)\"\n></pagination-controls>\n","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport { NewsService } from '../../services/news.service';\nimport { LoggerFactory } from '../../utils/logger-factory.service';\nimport { News } from '../../models/news.model';\nimport { filter } from 'rxjs/operators';\nimport { PersistenceUtilService } from '../../services/persistence.service';\n\n@Component({\n  selector: 'app-list-news',\n  templateUrl: './list-news.component.html',\n  styleUrls: ['./list-news.component.css'],\n})\nexport class ListNewsComponent implements OnInit, OnChanges {\n  @Input() flagFilter!: boolean;\n  @Input() selectLanguage!: string;\n  @Input() page!: number;\n  @Input() tabAct!: string;\n  dataNews!: News[];\n  itemsPerPage!: number;\n  currentPage: any;\n  totalItems: any;\n  aux!: number;\n  constructor(\n    private newsService: NewsService,\n    private loggerFactory: LoggerFactory,\n    private persistenceUtilService: PersistenceUtilService\n  ) {}\n\n  ngOnInit(): void {\n    this.page = 0;\n    // console.log(this.flagFilter);\n    // console.log(this.selectLanguage);\n    // this.getOrdenes(this.selectLanguage, this.page);\n    this.reLoad();\n  }\n  ngOnChanges(): void {\n    // console.log(this.flagFilter);\n    // console.log(this.selectLanguage);\n    this.getOrdenes(this.selectLanguage, this.page);\n  }\n\n  getOrdenes(selectLanguage: string, page: number): void {\n    this.dataNews = [];\n    switch (this.tabAct) {\n      case 'all':\n        if (selectLanguage) {\n          this.selectLanguage = selectLanguage;\n          this.persistenceUtilService.saveLocal(\n            'nameFilter',\n            this.selectLanguage\n          );\n          this.newsService.getNews(selectLanguage, page).subscribe(\n            (data) => {\n              this.dataNews = data.hits;\n              this.dataNews = this.dataNews.filter(\n                (dataNews) =>\n                  dataNews.author !== null &&\n                  dataNews.created_at !== null &&\n                  dataNews.story_title !== null &&\n                  dataNews.story_url !== null\n              );\n              // console.log(this.dataNews);\n              this.itemsPerPage = data.hitsPerPage;\n              this.currentPage = this.page;\n              this.totalItems = data.nbHits;\n            },\n            (error) => {\n              this.loggerFactory.error(`[Error] - Error al solicitar news`);\n            }\n          );\n        }\n        break;\n      case 'fav':\n        this.selectLanguage = selectLanguage;\n        this.dataNews.push(\n          {\n            author: 'mmm',\n            created_at: 'aaaa',\n            story_title: 'prueba',\n            story_url: 'dfsfsad',\n          },\n          {\n            author: 'mmm',\n            created_at: 'aaaa',\n            story_title: 'prueba',\n            story_url: 'dfsfsad',\n          }\n        );\n        this.itemsPerPage = 20;\n        this.currentPage = 1;\n        this.totalItems = this.dataNews.length;\n        break;\n    }\n  }\n  pageChanged($event: any): void {\n    this.page = $event;\n    // console.log($event);\n    this.aux = $event - 1;\n    // console.log(this.aux);\n    this.getOrdenes(this.selectLanguage, this.aux);\n  }\n\n  reLoad(): void {\n    const persistence = this.persistenceUtilService.getLocal('nameFilter');\n    console.log(persistence);\n    if (persistence) {\n      this.getOrdenes(persistence, 0);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'testReign';\n}\n","<div class=\"Front-End-Test---Home-view\">\n  <div class=\"Rectangle-2-Copy\">\n    <span class=\"HACKER-NEWS\">\n      <img src=\"../assets/img/hacker-news.png\"\n    /></span>\n  </div>\n\n  <router-outlet> </router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SwitchPublicationsComponent } from './shared/switch-publications/switch-publications.component';\nimport { PersistenceModule, PersistenceService } from 'angular-persistence';\nimport { PersistenceUtilService } from './services/persistence.service';\nimport { ListNewsComponent } from './shared/list-news/list-news.component';\nimport { FiltertNewsComponent } from './shared/filtert-news/filtert-news.component';\nimport { AppNewsComponent } from './components/app-news/app-news.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxPaginationModule } from 'ngx-pagination';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SwitchPublicationsComponent,\n    ListNewsComponent,\n    FiltertNewsComponent,\n    AppNewsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    PersistenceModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NgxPaginationModule,\n  ],\n  providers: [PersistenceService, PersistenceUtilService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\n\r\n/**\r\n * Servicio de control de log.\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoggerFactory {\r\n  /**\r\n   * Nivel de log definido desde archivo enviroment.\r\n   */\r\n  private level!: number;\r\n\r\n  /**\r\n   * Flag si se encuentra activa la impresion de Log.\r\n   */\r\n  private active: boolean;\r\n\r\n  /**\r\n   * Constructor obtiene desde el archivo enviroment\r\n   *  el estado de activacion y el nivel a imprimir.\r\n   */\r\n  constructor() {\r\n    this.active = environment.log.active === 'true';\r\n    switch (environment.log.level) {\r\n      case 'TRACE':\r\n        this.level = 4;\r\n        break;\r\n      case 'DEBUG':\r\n        this.level = 3;\r\n        break;\r\n      case 'INFO':\r\n        this.level = 2;\r\n        break;\r\n      case 'WARNING':\r\n        this.level = 1;\r\n        break;\r\n      case 'ERROR':\r\n        this.level = 0;\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Desplegar un mensaje de nivel TRACE en consola.\r\n   * @param msg Mensaje a desplegar\r\n   * @param object [Optional] Object to print.\r\n   */\r\n  trace(msg: string, object: any = ''): void {\r\n    if (this.active && this.level >= 0) {\r\n      console.log(this.generateMessage(msg), object);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Despliega un mensaje de nivel DEBUD en consola.\r\n   * @param msg Mensaje a desplegar\r\n   * @param object [Optional] Object to print.\r\n   */\r\n  debug(msg: string, object: any = ''): void {\r\n    if (this.active && this.level >= 1) {\r\n      console.log(this.generateMessage(msg), object);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Despliega un mensaje de nivel INFO en consola.\r\n   * @param msg Mensaje a desplegar.\r\n   * @param object [Optional] Object to print.\r\n   */\r\n  info(msg: string, object: any = ''): void {\r\n    if (this.active && this.level >= 2) {\r\n      console.log(this.generateMessage(msg), object);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Despliega un mensaje de nivel WARNING en consola.\r\n   * @param msg Mensaje a desplegar.\r\n   * @param object [Optional] Object to print.\r\n   */\r\n  warning(msg: string, object: any = ''): void {\r\n    if (this.active && this.level >= 3) {\r\n      console.warn(this.generateMessage(msg), object);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Despliega un mensaje de nivel ERROR en consola.\r\n   * @param msg Mensaje a desplegar.\r\n   * @param object [Optional] Object to print.\r\n   */\r\n  error(msg: string, object: any = ''): void {\r\n    if (this.active && this.level >= 4) {\r\n      console.error(this.generateMessage(msg), object);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Despliega un mensaje en consola saltandose estado y nivel definido de log.\r\n   * @param msg  mensaje a desplegar.\r\n   * @param object [Optional] Object to print.\r\n   */\r\n  force(msg: string, object: any = ''): void {\r\n    console.log(this.generateMessage(msg), object);\r\n  }\r\n\r\n  /**\r\n   * Metodo que genera el string a imprimir en consola.\r\n   * @param msg Mensaje a desplegar.\r\n   */\r\n  private generateMessage(msg: string): string {\r\n    if (msg) {\r\n      return '[' + new Date().toLocaleString() + '] ' + msg;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PersistenceUtilService } from '../../services/persistence.service';\n\n@Component({\n  selector: 'app-switch-publications',\n  templateUrl: './switch-publications.component.html',\n  styleUrls: ['./switch-publications.component.css'],\n})\nexport class SwitchPublicationsComponent implements OnInit {\n  tabAct!: string;\n  constructor(\n    private route: Router,\n    private persistenceUtilService: PersistenceUtilService\n  ) {}\n\n  @Output() controllerList = new EventEmitter<{\n    tabAct: string;\n  }>();\n\n  ngOnInit(): void {\n    this.reLoad();\n    this.tabActive(this.tabAct);\n  }\n  reLoad(): void {\n    const persistence = this.persistenceUtilService.getLocal('tabAct');\n    persistence ? (this.tabAct = persistence) : (this.tabAct = 'all');\n  }\n\n  // Activa la pestaña seleccionada y hace el switcheo entre vistas (all/fav).\n  tabActive(tabVal: any): void {\n    this.tabAct = tabVal;\n    this.persistenceUtilService.saveLocal('tabAct', this.tabAct);\n    this.controllerList.emit({\n      tabAct: tabVal,\n    });\n  }\n}\n","<section class=\"switch_view\">\n  <button\n    (click)=\"tabActive('all')\"\n    class=\"all\"\n    [ngClass]=\"{ active: tabAct === 'all' }\"\n  >\n    <span>all</span>\n  </button>\n  <button\n    (click)=\"tabActive('fav')\"\n    class=\"My-faves\"\n    [ngClass]=\"{ active: tabAct === 'fav' }\"\n  >\n    <span>My Faves</span>\n  </button>\n</section>\n","import { Injectable } from '@angular/core';\r\nimport { StorageType, PersistenceService } from 'angular-persistence';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PersistenceUtilService {\r\n  constructor(private persistenceService: PersistenceService) {}\r\n\r\n  saveSession(key: string, value: any): void {\r\n    this.persistenceService.set(key, value, {\r\n      type: StorageType.SESSION,\r\n    });\r\n  }\r\n\r\n  getSession(key: string): void {\r\n    return this.persistenceService.get(key, StorageType.SESSION);\r\n  }\r\n\r\n  removeSession(key: string): void {\r\n    return this.persistenceService.remove(key, StorageType.SESSION);\r\n  }\r\n\r\n  removeAll(): void {\r\n    this.persistenceService.removeAll(StorageType.SESSION);\r\n  }\r\n\r\n  saveLocal(key: string, value: any): void {\r\n    this.persistenceService.set(key, value, {\r\n      type: StorageType.LOCAL,\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  getLocal(key: string) {\r\n    return this.persistenceService.get(key, StorageType.LOCAL);\r\n  }\r\n  // tslint:disable-next-line:typedef\r\n  removeLocal(key: string) {\r\n    return this.persistenceService.remove(key, StorageType.LOCAL);\r\n  }\r\n\r\n  limpiarOrdenesYFormularios(): void {\r\n    localStorage.removeItem('ANGULAR_PERSISTENCE_STORAGE::nameFilter');\r\n    localStorage.removeItem('ANGULAR_PERSISTENCE_STORAGE::tabAct');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppNewsComponent } from './components/app-news/app-news.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: AppNewsComponent },\n      { path: '', redirectTo: '', pathMatch: 'full' },\n    ],\n  },\n];\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}